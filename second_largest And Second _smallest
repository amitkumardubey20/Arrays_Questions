// brute force method ----------- when no duplicate elements are present

//method -1

import java.util.*;
public class Main{
    public static void main(String args[]){
        int arr[]= {5,4,6,8,2};
        
       getsort(arr);
        
    }
    static void getsort(int arr[]){
        Arrays.sort(arr);
        int small=arr[1];
        int large=arr[arr.length-2];
         System.out.println("second smallest element is : "+small);
         System.out.println("second largest element is : "+large);
    }
    
}


// method 2 if dulplicate elements are present


public class Main
{
	public static void main(String[] args) {
	    int arr[]={1,2,3,4,5};
	    
	       getSmallAndlarge(arr);
	}
	static void getSmallAndlarge(int arr[])
	{
	 int small=Integer.MAX_VALUE;
	 int second_small=Integer.MAX_VALUE;
	 int large=Integer.MIN_VALUE;
	 int second_large=Integer.MIN_VALUE;
	 
	 for(int i=0;i<arr.length;i++){
	     
	     small=Math.min(small,arr[i]);
	     large=Math.max(large,arr[i]);
	 }
	 
	 for(int i=0;i<arr.length;i++){
	     
	     if(arr[i]<second_small && arr[i]!=small)
	            second_small=arr[i];
	            
	    if(arr[i]>second_large && arr[i]!=large)
	            second_large=arr[i];
	 }
	 System.out.println("second smallest element :"+second_small);
	 System.out.println("second largest element :"+second_large);
	 
	}
}


// method 3 most efficient solution

public class Main
{
	public static void main(String[] args) {
	    int arr[]={2,3,4,5};
	    int c=getSmall(arr);
	    int d=getLarge(arr);
	    
	    System.out.println(c);
	     System.out.println(d);
	
	}
	 static int getSmall(int arr[]){
	     int small =Integer.MAX_VALUE;
	     int second_small=Integer.MAX_VALUE;
	     
	     for(int i=0;i<arr.length;i++){
	         if(arr[i]<small){
	             second_small=small;
	             small=arr[i];
	         }
	         
	         else if(arr[i]<second_small && arr[i]!=small){
	              second_small=arr[i];
	         }
	     }
	     return second_small;
	     
	 }
	 
	  static int getLarge(int arr[]){
	     int large =Integer.MIN_VALUE;
	     int second_large=Integer.MIN_VALUE;
	     
	     for(int i=0;i<arr.length;i++){
	         if(arr[i]>large){
	             second_large=large;
	             large=arr[i];
	         }
	         else if(arr[i]> second_large && arr[i]!=large){
	              second_large=arr[i];
	         }
	     }
	     return second_large;
	     
	 }
}

