// method --1
//by using an extra array

public class Main{
    public static void main(String args[]){
        int n=5;
        int arr[]={2,3,4,5,6};
        reverse(arr,n);
    }
    static void reverse(int arr[],int n){
        int ans[]=new int[n];
        
        for( int i=n-1;i>=0;i--){
            ans[n-i-1]=arr[i];
        }
        printArray(ans,n);
        
    }
    static void printArray(int ans[],int n){
        for(int i=0;i<n;i++){
            System.out.print(ans[i]);
        }
        
    }
    
   
}

// ----method 2
//by using collection framework
// in java collection framework use "wrapper classes" instead of primitive data types
// it means use Integer instead of int

import java.util.*;
public class main{
    public static void main(String args[]){
        int n=5;
        Integer arr[]={1,2,3,4,5};
        reverse(arr,n);
    }
    static void reverse(Integer arr[],int n){
        Collections.reverse(Arrays.asList(arr));
        for(int i=0;i<n;i++){
        System.out.print(arr[i]);
    }
    }
    
}

// method -3
// bu using two pointers p1 and p2 
// first pointer is at the first of the array and second pointer is at the last of the array

public class Main{
    public static void main(String args[]){
        
        int arr[]={1,2,3,4,5};
        int n=arr.length;
        
        reverse(arr,n);
    }
     static void printArray(int arr[], int n) {
      System.out.print("Reversed array is:- \n");
      for (int i = 0; i < n; i++) {
         System.out.print(arr[i] + " ");
      }
   }
    static void reverse(int arr[],int n){
        int p1=0;
        int p2=n-1;
        while(p1<p2){
            int temp=arr[p1];
            arr[p1]=arr[p2];
            arr[p2]=temp;
            p1++;
            p2--;
        }
        printArray(arr,n);
        
    }
}
